{"version":3,"sources":["services/movements.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","services","getAll","a","axios","get","create","newObject","post","erase","id","delete","SubmitForm","moneyNumber","moneyChange","typeName","typeChange","submit","handleChange","checked","thisClass","className","onSubmit","type","name","onChange","htmlFor","value","min","step","required","Movements","movements","handleDelete","map","mov","description","onClick","_id","Total","incomes","expenses","App","useState","setMovements","setIncome","setExpense","expenseName","setExpenseName","money","setMoney","isChecked","setChecked","useEffect","movServices","then","res","data","e","Number","target","preventDefault","incomeObject","concat","expenseObject","filter","reduce","b","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5acce4ae.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'api/movements'\n\nconst getAll = async () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst erase = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst services = { getAll, create, erase }\n\nexport default services","import React, { useEffect, useState } from \"react\";\nimport movServices from './services/movements'\nimport \"./App.css\";\n\nconst SubmitForm = ({\n  moneyNumber,\n  moneyChange,\n  typeName,\n  typeChange,\n  submit,\n  handleChange,\n  checked,\n  thisClass,\n}) => {\n  return (\n    <div className=\"formButton\">\n      <form onSubmit={submit} className={thisClass}>\n        <div className=\"radio\">\n          <input\n            type=\"radio\"\n            id=\"radio-one\"\n            name=\"switch-one\"\n            onChange={handleChange}\n            checked={checked}\n          />\n          <label htmlFor=\"radio-one\">Income</label>\n          <input\n            type=\"radio\"\n            id=\"radio-two\"\n            name=\"switch-one\"\n            onChange={handleChange}\n            checked={!checked}\n          />\n          <label htmlFor=\"radio-two\">Expense </label>\n        </div>\n        <div>\n          Amount: $\n          <input\n            value={moneyNumber}\n            onChange={moneyChange}\n            type=\"number\"\n            id=\"currency-input\"\n            min=\"1\"\n            step=\"any\"\n            required\n          />\n        </div>\n        <div>\n          Description: <input value={typeName} onChange={typeChange} required />\n        </div>\n        <button type=\"submit\">add</button>\n      </form>\n    </div>\n  );\n};\n\nconst Movements = ({ movements, className, handleDelete }) => {\n  return movements.map((mov) => (\n    <ul className={className}>\n      <h3>{mov.description}</h3> <li>${mov.value} </li>\n      <li>{mov.type}</li>\n      <button onClick={()=>handleDelete(mov._id)}>delete</button>\n    </ul>\n  ));\n};\n\nconst Total = ({ incomes, expenses }) => {\n  return (\n    <div>\n      <ul className=\"total\">\n        <li>Incomes: ${incomes}</li>\n        <li>Expenses: ${expenses}</li>\n        <li>Total: ${incomes - expenses}</li>\n      </ul>\n    </div>\n  );\n};\n\nfunction App() {\n  const [movements, setMovements] = useState([]);\n  const [incomes, setIncome] = useState([]);\n  const [expenses, setExpense] = useState([]);\n  const [expenseName, setExpenseName] = useState(\"\");\n  const [money, setMoney] = useState(\"\");\n  const [isChecked, setChecked] = useState(true); \n  useEffect(() => {\n    movServices\n      .getAll()\n      .then(res => setMovements(res.data)\n      )\n    }, [movements])\n    \n  \n\n  const handleType = (e) => {\n    setExpenseName(e.target.value);\n  };\n\n  const handleMoney = (e) => {\n    setMoney(Number(e.target.value));\n  };\n\n  const addNew = (e) => {\n    e.preventDefault();\n    if (isChecked) {\n      const incomeObject = {\n        description: expenseName,\n        value: Number(money),\n        type: \"income\",\n      };\n      movServices\n        .create(incomeObject)\n        .then(res => {  \n          setIncome(incomes.concat(res.data));\n          setMoney(\"\");\n          setExpenseName(\"\");\n          setMovements(movements.concat(res.data));\n        })\n    } else {\n      const expenseObject = {\n        description: expenseName,\n        value: Number(money),\n        type: \"expense\",\n      };\n      movServices\n        .create(expenseObject)\n        .then(res => { \n          setExpense(expenses.concat(res.data));\n          setMoney(\"\");\n          setExpenseName(\"\");\n          setMovements(movements.concat(res.data));\n        })\n     \n    }\n  };\n\n\n  const handleChange = (e) => {\n    setChecked(!isChecked);\n  };\n\n  const eraseMov = (id) => {\n    movServices.erase(id)\n  }\n    \n\n  return (\n    \n    <div className='d'>\n      <div className=\"header\">\n        <h1>Stingy!</h1>\n      </div>\n\n      <div className=\"App\">\n        <h2>Add new movement:</h2>\n        <SubmitForm\n          typeName={expenseName}\n          moneyNumber={money}\n          moneyChange={handleMoney}\n          checked={isChecked}\n          handleChange={handleChange}\n          typeChange={handleType}\n          submit={addNew}\n        />\n        <div className=\"movements\">\n          <Movements movements={movements} className=\"movDetail\" handleDelete={eraseMov} />\n        </div>\n        <div>\n          <h2>Total movements:</h2>.\n          <Total incomes={movements.filter(mov => mov.type === 'income').reduce((a, b) => a + b.value, 0)} expenses={movements.filter(mov => mov.type === 'expense').reduce((a, b) => a + b.value, 0)} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}